// This file was autogenerated using go run mkcode.go -- section.go
// DO NOT EDIT.

package ntdll

import "unsafe"

// The SectionInformationClass constants have been derived from the SECTION_INFORMATION_CLASS enum definition.
type SectionInformationClass uint32

const (
	SectionBasicInformation         SectionInformationClass = 0
	SectionImageInformation                                 = 1
	SectionRelocationInformation                            = 2
	SectionOriginalBaseInformation                          = 3
	SectionInternalImageInformation                         = 4
)

// The SectionInherit constants have been derived from the SECTION_INHERIT enum definition.
type SectionInherit uint32

const (
	ViewShare SectionInherit = 1
	ViewUnmap                = 2
)

var (
	procNtCreateSection        = modntdll.NewProc("NtCreateSection")
	procNtExtendSection        = modntdll.NewProc("NtExtendSection")
	procNtMapViewOfSection     = modntdll.NewProc("NtMapViewOfSection")
	procNtOpenSection          = modntdll.NewProc("NtOpenSection")
	procNtQuerySection         = modntdll.NewProc("NtQuerySection")
	procNtUnmapViewOfSection   = modntdll.NewProc("NtUnmapViewOfSection")
	procNtUnmapViewOfSectionEx = modntdll.NewProc("NtUnmapViewOfSectionEx")
)

// SectionBasicInformationT has been derived from the SECTION_BASIC_INFORMATION struct definition.
type SectionBasicInformationT struct {
	BaseAddress          *byte
	AllocationAttributes uint32
	MaximumSize          int64
}

// SectionImageInformationT has been derived from the SECTION_IMAGE_INFORMATION struct definition.
type SectionImageInformationT struct {
	TransferAddress        *byte
	ZeroBits               uint32
	MaximumStackSize       uintptr
	CommittedStackSize     uintptr
	SubSystemType          uint32
	SubSystemVersion       uint32
	OperatingSystemVersion uint32
	ImageCharacteristics   uint16
	DllCharacteristics     uint16
	Machine                uint16
	ImageContainsCode      bool
	ImageFlags             byte
	LoaderFlags            uint32
	ImageFileSize          uint32
	CheckSum               uint32
}

// OUT-parameter: SectionHandle.
// *OPT-parameter: ObjectAttributes, MaximumSize, FileHandle.
func NtCreateSection(
	SectionHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	MaximumSize *int64,
	SectionPageProtection uint32,
	AllocationAttributes uint32,
	FileHandle Handle,
) NtStatus {
	r0, _, _ := procNtCreateSection.Call(uintptr(unsafe.Pointer(SectionHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(unsafe.Pointer(MaximumSize)),
		uintptr(SectionPageProtection),
		uintptr(AllocationAttributes),
		uintptr(FileHandle))
	return NtStatus(r0)
}

// INOUT-parameter: NewSectionSize.
func NtExtendSection(
	SectionHandle Handle,
	NewSectionSize *int64,
) NtStatus {
	r0, _, _ := procNtExtendSection.Call(uintptr(SectionHandle),
		uintptr(unsafe.Pointer(NewSectionSize)))
	return NtStatus(r0)
}

// INOUT-parameter: BaseAddress, SectionOffset, ViewSize.
// *OPT-parameter: SectionOffset.
func NtMapViewOfSection(
	SectionHandle Handle,
	ProcessHandle Handle,
	BaseAddress *byte,
	ZeroBits *uint32,
	CommitSize uintptr,
	SectionOffset *int64,
	ViewSize *uintptr,
	InheritDisposition SectionInherit,
	AllocationType uint32,
	Win32Protect uint32,
) NtStatus {
	r0, _, _ := procNtMapViewOfSection.Call(uintptr(SectionHandle),
		uintptr(ProcessHandle),
		uintptr(unsafe.Pointer(BaseAddress)),
		uintptr(unsafe.Pointer(ZeroBits)),
		uintptr(CommitSize),
		uintptr(unsafe.Pointer(SectionOffset)),
		uintptr(unsafe.Pointer(ViewSize)),
		uintptr(InheritDisposition),
		uintptr(AllocationType),
		uintptr(Win32Protect))
	return NtStatus(r0)
}

// OUT-parameter: SectionHandle.
func NtOpenSection(
	SectionHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
) NtStatus {
	r0, _, _ := procNtOpenSection.Call(uintptr(unsafe.Pointer(SectionHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)))
	return NtStatus(r0)
}

// OUT-parameter: SectionInformation, ReturnLength.
// *OPT-parameter: ReturnLength.
func NtQuerySection(
	SectionHandle Handle,
	SectionInformationClass SectionInformationClass,
	SectionInformation *byte,
	SectionInformationLength uintptr,
	ReturnLength *uintptr,
) NtStatus {
	r0, _, _ := procNtQuerySection.Call(uintptr(SectionHandle),
		uintptr(SectionInformationClass),
		uintptr(unsafe.Pointer(SectionInformation)),
		uintptr(SectionInformationLength),
		uintptr(unsafe.Pointer(ReturnLength)))
	return NtStatus(r0)
}

// *OPT-parameter: BaseAddress.
func NtUnmapViewOfSection(
	ProcessHandle Handle,
	BaseAddress *byte,
) NtStatus {
	r0, _, _ := procNtUnmapViewOfSection.Call(uintptr(ProcessHandle),
		uintptr(unsafe.Pointer(BaseAddress)))
	return NtStatus(r0)
}

// *OPT-parameter: BaseAddress.
func NtUnmapViewOfSectionEx(
	ProcessHandle Handle,
	BaseAddress *byte,
	Flags uint32,
) NtStatus {
	r0, _, _ := procNtUnmapViewOfSectionEx.Call(uintptr(ProcessHandle),
		uintptr(unsafe.Pointer(BaseAddress)),
		uintptr(Flags))
	return NtStatus(r0)
}
