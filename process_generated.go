// This file was autogenerated using go run mkcode.go -- process.go
// DO NOT EDIT.

package ntdll

import "unsafe"

// The ProcessInformationClass constants have been derived from the PROCESS_INFORMATION_CLASS enum definition.
type ProcessInformationClass uint32

const (
	ProcessBasicInformation                     ProcessInformationClass = 0
	ProcessQuotaLimits                                                  = 1
	ProcessIoCounters                                                   = 2
	ProcessVmCounters                                                   = 3
	ProcessTimes                                                        = 4
	ProcessBasePriority                                                 = 5
	ProcessRaisePriority                                                = 6
	ProcessDebugPort                                                    = 7
	ProcessExceptionPort                                                = 8
	ProcessAccessToken                                                  = 9
	ProcessLdtInformation                                               = 10
	ProcessLdtSize                                                      = 11
	ProcessDefaultHardErrorMode                                         = 12
	ProcessIoPortHandlers                                               = 13
	ProcessPooledUsageAndLimits                                         = 14
	ProcessWorkingSetWatch                                              = 15
	ProcessUserModeIOPL                                                 = 16
	ProcessEnableAlignmentFaultFixup                                    = 17
	ProcessPriorityClass                                                = 18
	ProcessWx86Information                                              = 19
	ProcessHandleCount                                                  = 20
	ProcessAffinityMask                                                 = 21
	ProcessPriorityBoost                                                = 22
	ProcessDeviceMap                                                    = 23
	ProcessSessionInformation                                           = 24
	ProcessForegroundInformation                                        = 25
	ProcessWow64Information                                             = 26
	ProcessImageFileName                                                = 27
	ProcessLUIDDeviceMapsEnabled                                        = 28
	ProcessBreakOnTermination                                           = 29
	ProcessDebugObjectHandle                                            = 30
	ProcessDebugFlags                                                   = 31
	ProcessHandleTracing                                                = 32
	ProcessIoPriority                                                   = 33
	ProcessExecuteFlags                                                 = 34
	ProcessTlsInformation                                               = 35
	ProcessCookie                                                       = 36
	ProcessImageInformation                                             = 37
	ProcessCycleTime                                                    = 38
	ProcessPagePriority                                                 = 39
	ProcessInstrumentationCallback                                      = 40
	ProcessThreadStackAllocation                                        = 41
	ProcessWorkingSetWatchEx                                            = 42
	ProcessImageFileNameWin32                                           = 43
	ProcessImageFileMapping                                             = 44
	ProcessAffinityUpdateMode                                           = 45
	ProcessMemoryAllocationMode                                         = 46
	ProcessGroupInformation                                             = 47
	ProcessTokenVirtualizationEnabled                                   = 48
	ProcessConsoleHostProcess                                           = 49
	ProcessWindowInformation                                            = 50
	ProcessHandleInformation                                            = 51
	ProcessMitigationPolicy                                             = 52
	ProcessDynamicFunctionTableInformation                              = 53
	ProcessHandleCheckingMode                                           = 54
	ProcessKeepAliveCount                                               = 55
	ProcessRevokeFileHandles                                            = 56
	ProcessWorkingSetControl                                            = 57
	ProcessHandleTable                                                  = 58
	ProcessCheckStackExtentsMode                                        = 59
	ProcessCommandLineInformation                                       = 60
	ProcessProtectionInformation                                        = 61
	ProcessMemoryExhaustion                                             = 62
	ProcessFaultInformation                                             = 63
	ProcessTelemetryIdInformation                                       = 64
	ProcessCommitReleaseInformation                                     = 65
	ProcessDefaultCpuSetsInformation                                    = 66
	ProcessAllowedCpuSetsInformation                                    = 67
	ProcessSubsystemProcess                                             = 68
	ProcessJobMemoryInformation                                         = 69
	ProcessInPrivate                                                    = 70
	ProcessRaiseUMExceptionOnInvalidHandleClose                         = 71
	ProcessIumChallengeResponse                                         = 72
	ProcessChildProcessInformation                                      = 73
	ProcessHighGraphicsPriorityInformation                              = 74
	ProcessSubsystemInformation                                         = 75
	ProcessEnergyValues                                                 = 76
	ProcessPowerThrottlingState                                         = 77
	ProcessReserved3Information                                         = 78
	ProcessWin32kSyscallFilterInformation                               = 79
	ProcessDisableSystemAllowedCpuSets                                  = 80
	ProcessWakeInformation                                              = 81
	ProcessEnergyTrackingState                                          = 82
	ProcessManageWritesToExecutableMemory                               = 83
	ProcessCaptureTrustletLiveDump                                      = 84
	ProcessTelemetryCoverage                                            = 85
	ProcessEnclaveInformation                                           = 86
	ProcessEnableReadWriteVmLogging                                     = 87
	ProcessUptimeInformation                                            = 88
	ProcessImageSection                                                 = 89
	ProcessDebugAuthInformation                                         = 90
	ProcessSystemResourceManagement                                     = 91
	ProcessSequenceNumber                                               = 92
	ProcessLoaderDetour                                                 = 93
	ProcessSecurityDomainInformation                                    = 94
	ProcessCombineSecurityDomainsInformation                            = 95
	ProcessEnableLogging                                                = 96
	ProcessLeapSecondInformation                                        = 97
	ProcessFiberShadowStackAllocation                                   = 98
	ProcessFreeFiberShadowStackAllocation                               = 99
	ProcessAltSystemCallInformation                                     = 100
	ProcessDynamicEHContinuationTargets                                 = 101
	ProcessDynamicEnforcedCetCompatibleRanges                           = 102
	ProcessCreateStateChange                                            = 103
	ProcessApplyStateChange                                             = 104
	ProcessEnableOptionalXStateFeatures                                 = 105
	ProcessAltPrefetchParam                                             = 106
	ProcessAssignCpuPartitions                                          = 107
	ProcessPriorityClassEx                                              = 108
	ProcessMembershipInformation                                        = 109
	ProcessEffectiveIoPriority                                          = 110
	ProcessEffectivePagePriority                                        = 111
)

// The ThreadInformationClass constants have been derived from the THREAD_INFORMATION_CLASS enum definition.
type ThreadInformationClass uint32

const (
	ThreadBasicInformation          ThreadInformationClass = 0
	ThreadTimes                                            = 1
	ThreadPriority                                         = 2
	ThreadBasePriority                                     = 3
	ThreadAffinityMask                                     = 4
	ThreadImpersonationToken                               = 5
	ThreadDescriptorTableEntry                             = 6
	ThreadEnableAlignmentFaultFixup                        = 7
	ThreadEventPair_Reusable                               = 8
	ThreadQuerySetWin32StartAddress                        = 9
	ThreadZeroTlsCell                                      = 10
	ThreadPerformanceCount                                 = 11
	ThreadAmILastThread                                    = 12
	ThreadIdealProcessor                                   = 13
	ThreadPriorityBoost                                    = 14
	ThreadSetTlsArrayAddress                               = 15
	ThreadIsIoPending                                      = 16
	ThreadHideFromDebugger                                 = 17
	ThreadBreakOnTermination                               = 18
	ThreadSwitchLegacyState                                = 19
	ThreadIsTerminated                                     = 20
	ThreadLastSystemCall                                   = 21
	ThreadIoPriority                                       = 22
	ThreadCycleTime                                        = 23
	ThreadPagePriority                                     = 24
	ThreadActualBasePriority                               = 25
	ThreadTebInformation                                   = 26
	ThreadCSwitchMon                                       = 27
	ThreadCSwitchPmu                                       = 28
	ThreadWow64Context                                     = 29
	ThreadGroupInformation                                 = 30
	ThreadUmsInformation                                   = 31
	ThreadCounterProfiling                                 = 32
	ThreadIdealProcessorEx                                 = 33
	MaxThreadInfoClass                                     = 34
)

var (
	procNtQueryInformationProcess = modntdll.NewProc("NtQueryInformationProcess")
	procNtOpenProcess             = modntdll.NewProc("NtOpenProcess")
	procNtOpenThread              = modntdll.NewProc("NtOpenThread")
	procNtQueryInformationThread  = modntdll.NewProc("NtQueryInformationThread")
	procNtSetInformationThread    = modntdll.NewProc("NtSetInformationThread")
	procNtSetInformationProcess   = modntdll.NewProc("NtSetInformationProcess")
	procNtCreateProcess           = modntdll.NewProc("NtCreateProcess")
	procNtCreateProcessEx         = modntdll.NewProc("NtCreateProcessEx")
)

// Peb has been derived from the PEB struct definition.
type Peb struct {
	Reserved1              [2]byte
	BeingDebugged          byte
	Reserved2              [1]byte
	Reserved3              [2]*byte
	Ldr                    *PebLdrData
	ProcessParameters      *RtlUserProcessParameters
	Reserved4              [3]*byte
	AtlThunkSListPtr       *byte
	Reserved5              *byte
	Reserved6              uint32
	Reserved7              *byte
	Reserved8              uint32
	AtlThunkSListPtr32     uint32
	Reserved9              [45]*byte
	Reserved10             [96]byte
	PostProcessInitRoutine *PsPostProcessInitRoutine
	Reserved11             [128]byte
	Reserved12             [1]*byte
	SessionId              uint32
}

// PebLdrData has been derived from the PEB_LDR_DATA struct definition.
type PebLdrData struct {
	Reserved1               [8]byte
	Reserved2               [3]*byte
	InMemoryOrderModuleList ListEntry
}

// RtlUserProcessParameters has been derived from the RTL_USER_PROCESS_PARAMETERS struct definition.
type RtlUserProcessParameters struct {
	Reserved1     [16]byte
	Reserved2     [10]*byte
	ImagePathName UnicodeString
	CommandLine   UnicodeString
}

// ProcessBasicInformationT has been derived from the PROCESS_BASIC_INFORMATION struct definition.
type ProcessBasicInformationT struct {
	ExitStatus                   NtStatus
	PebBaseAddress               *Peb
	AffinityMask                 *uint32
	BasePriority                 Kpriority
	UniqueProcessId              Handle
	InheritedFromUniqueProcessId Handle
}

// unknown-parameter: ProcessHandle, ProcessInformationClass, ProcessInformation, ProcessInformationLength, ReturnLength.
func NtQueryInformationProcess(
	ProcessHandle Handle,
	ProcessInformationClass ProcessInformationClass,
	ProcessInformation *byte,
	ProcessInformationLength uint32,
	ReturnLength *uint32,
) NtStatus {
	r0, _, _ := procNtQueryInformationProcess.Call(uintptr(ProcessHandle),
		uintptr(ProcessInformationClass),
		uintptr(unsafe.Pointer(ProcessInformation)),
		uintptr(ProcessInformationLength),
		uintptr(unsafe.Pointer(ReturnLength)))
	return NtStatus(r0)
}

// OUT-parameter: ProcessHandle.
// *OPT-parameter: ClientId.
func NtOpenProcess(
	ProcessHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	ClientId *ClientId,
) NtStatus {
	r0, _, _ := procNtOpenProcess.Call(uintptr(unsafe.Pointer(ProcessHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(unsafe.Pointer(ClientId)))
	return NtStatus(r0)
}

// OUT-parameter: ThreadHandle.
// *OPT-parameter: ClientId.
func NtOpenThread(
	ThreadHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	ClientId *ClientId,
) NtStatus {
	r0, _, _ := procNtOpenThread.Call(uintptr(unsafe.Pointer(ThreadHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(unsafe.Pointer(ClientId)))
	return NtStatus(r0)
}

// unknown-parameter: ThreadHandle, ThreadInformationClass, ThreadInformation, ThreadInformationLength, ReturnLength.
func NtQueryInformationThread(
	ThreadHandle Handle,
	ThreadInformationClass ThreadInformationClass,
	ThreadInformation *byte,
	ThreadInformationLength uint32,
	ReturnLength *uint32,
) NtStatus {
	r0, _, _ := procNtQueryInformationThread.Call(uintptr(ThreadHandle),
		uintptr(ThreadInformationClass),
		uintptr(unsafe.Pointer(ThreadInformation)),
		uintptr(ThreadInformationLength),
		uintptr(unsafe.Pointer(ReturnLength)))
	return NtStatus(r0)
}

// unknown-parameter: ThreadHandle, ThreadInformationClass, ThreadInformation, ThreadInformationLength.
func NtSetInformationThread(
	ThreadHandle Handle,
	ThreadInformationClass ThreadInformationClass,
	ThreadInformation *byte,
	ThreadInformationLength uint32,
) NtStatus {
	r0, _, _ := procNtSetInformationThread.Call(uintptr(ThreadHandle),
		uintptr(ThreadInformationClass),
		uintptr(unsafe.Pointer(ThreadInformation)),
		uintptr(ThreadInformationLength))
	return NtStatus(r0)
}

// unknown-parameter: ProcessHandle, ProcessInformationClass, ProcessInformation, ProcessInformationLength.
func NtSetInformationProcess(
	ProcessHandle Handle,
	ProcessInformationClass ProcessInformationClass,
	ProcessInformation *byte,
	ProcessInformationLength uint32,
) NtStatus {
	r0, _, _ := procNtSetInformationProcess.Call(uintptr(ProcessHandle),
		uintptr(ProcessInformationClass),
		uintptr(unsafe.Pointer(ProcessInformation)),
		uintptr(ProcessInformationLength))
	return NtStatus(r0)
}

// OUT-parameter: ProcessHandle.
// *OPT-parameter: ObjectAttributes, SectionHandle, DebugPort, TokenHandle.
func NtCreateProcess(
	ProcessHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	ParentProcess Handle,
	InheritObjectTable bool,
	SectionHandle Handle,
	DebugPort Handle,
	TokenHandle Handle,
) NtStatus {
	r0, _, _ := procNtCreateProcess.Call(uintptr(unsafe.Pointer(ProcessHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(ParentProcess),
		fromBool(InheritObjectTable),
		uintptr(SectionHandle),
		uintptr(DebugPort),
		uintptr(TokenHandle))
	return NtStatus(r0)
}

// OUT-parameter: ProcessHandle.
// *OPT-parameter: ObjectAttributes, SectionHandle, DebugPort, ExceptionPort.
func NtCreateProcessEx(
	ProcessHandle *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	ParentProcess Handle,
	Flags uint32,
	SectionHandle Handle,
	DebugPort Handle,
	ExceptionPort Handle,
	InJob bool,
) NtStatus {
	r0, _, _ := procNtCreateProcessEx.Call(uintptr(unsafe.Pointer(ProcessHandle)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(ParentProcess),
		uintptr(Flags),
		uintptr(SectionHandle),
		uintptr(DebugPort),
		uintptr(ExceptionPort),
		fromBool(InJob))
	return NtStatus(r0)
}
