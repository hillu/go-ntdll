// This file was autogenerated using go run mkcode.go -- thread.go
// DO NOT EDIT.

package ntdll

import "unsafe"

var (
	procNtCreateThreadEx = modntdll.NewProc("NtCreateThreadEx")
)

// OUT-parameter: hThread, ThreadInfo.
func NtCreateThreadEx(
	hThread *Handle,
	DesiredAccess AccessMask,
	ObjectAttributes *ObjectAttributes,
	ProcessHandle Handle,
	lpStartAddress Handle,
	lpParameter *byte,
	CreateSuspended bool,
	StackZeroBits uint32,
	SizeOfStackCommit uint32,
	SizeOfStackReserve uint32,
	ThreadInfo Handle,
) NtStatus {
	r0, _, _ := procNtCreateThreadEx.Call(uintptr(unsafe.Pointer(hThread)),
		uintptr(DesiredAccess),
		uintptr(unsafe.Pointer(ObjectAttributes)),
		uintptr(ProcessHandle),
		uintptr(lpStartAddress),
		uintptr(unsafe.Pointer(lpParameter)),
		fromBool(CreateSuspended),
		uintptr(StackZeroBits),
		uintptr(SizeOfStackCommit),
		uintptr(SizeOfStackReserve),
		uintptr(ThreadInfo))
	return NtStatus(r0)
}
